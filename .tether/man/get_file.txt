__signature__
keras.utils.get_file(
  fname=None,
  origin=None,
  untar=False,
  md5_hash=None,
  file_hash=None,
  cache_subdir='datasets',
  hash_algorithm='auto',
  extract=False,
  archive_format='auto',
  cache_dir=None,
  force_download=False
)
__doc__
Downloads a file from a URL if it not already in the cache.

By default the file at the url `origin` is downloaded to the
cache_dir `~/.keras`, placed in the cache_subdir `datasets`,
and given the filename `fname`. The final location of a file
`example.txt` would therefore be `~/.keras/datasets/example.txt`.
Files in `.tar`, `.tar.gz`, `.tar.bz`, and `.zip` formats can
also be extracted.

Passing a hash will verify the file after download. The command line
programs `shasum` and `sha256sum` can compute the hash.

Example:

```python
path_to_downloaded_file = get_file(
    origin="https://storage.googleapis.com/download.tensorflow.org/example_images/flower_photos.tgz",
    extract=True,
)
```

Args:
    fname: If the target is a single file, this is your desired
        local name for the file.
        If `None`, the name of the file at `origin` will be used.
        If downloading and extracting a directory archive,
        the provided `fname` will be used as extraction directory
        name (only if it doesn't have an extension).
    origin: Original URL of the file.
    untar: Deprecated in favor of `extract` argument.
        Boolean, whether the file is a tar archive that should
        be extracted.
    md5_hash: Deprecated in favor of `file_hash` argument.
        md5 hash of the file for file integrity verification.
    file_hash: The expected hash string of the file after download.
        The sha256 and md5 hash algorithms are both supported.
    cache_subdir: Subdirectory under the Keras cache dir where the file is
        saved. If an absolute path, e.g. `"/path/to/folder"` is
        specified, the file will be saved at that location.
    hash_algorithm: Select the hash algorithm to verify the file.
        options are `"md5'`, `"sha256'`, and `"auto'`.
        The default 'auto' detects the hash algorithm in use.
    extract: If `True`, extracts the archive. Only applicable to compressed
        archive files like tar or zip.
    archive_format: Archive format to try for extracting the file.
        Options are `"auto'`, `"tar'`, `"zip'`, and `None`.
        `"tar"` includes tar, tar.gz, and tar.bz files.
        The default `"auto"` corresponds to `["tar", "zip"]`.
        None or an empty list will return no matches found.
    cache_dir: Location to store cached files, when None it
        defaults ether `$KERAS_HOME` if the `KERAS_HOME` environment
        variable is set or `~/.keras/`.
    force_download: If `True`, the file will always be re-downloaded
        regardless of the cache state.

Returns:
    Path to the downloaded file.

**⚠️ Warning on malicious downloads ⚠️**

Downloading something from the Internet carries a risk.
NEVER download a file/archive if you do not trust the source.
We recommend that you specify the `file_hash` argument
(if the hash of the source file is known) to make sure that the file you
are getting is the one you expect.

