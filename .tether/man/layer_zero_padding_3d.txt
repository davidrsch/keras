Help on class ZeroPadding3D in module keras.src.layers.reshaping.zero_padding3d:

class ZeroPadding3D(keras.src.layers.layer.Layer)
 |  ZeroPadding3D(padding=((1, 1), (1, 1), (1, 1)), data_format=None, **kwargs)
 |
 |  Zero-padding layer for 3D data (spatial or spatio-temporal).
 |
 |  Example:
 |
 |  >>> input_shape = (1, 1, 2, 2, 3)
 |  >>> x = np.arange(np.prod(input_shape)).reshape(input_shape)
 |  >>> y = keras.layers.ZeroPadding3D(padding=2)(x)
 |  >>> y.shape
 |  (1, 5, 6, 6, 3)
 |
 |  Args:
 |      padding: Int, or tuple of 3 ints, or tuple of 3 tuples of 2 ints.
 |          - If int: the same symmetric padding is applied to depth, height,
 |            and width.
 |          - If tuple of 3 ints: interpreted as three different symmetric
 |            padding values for depth, height, and width:
 |            `(symmetric_dim1_pad, symmetric_dim2_pad, symmetric_dim3_pad)`.
 |          - If tuple of 3 tuples of 2 ints: interpreted as
 |            `((left_dim1_pad, right_dim1_pad), (left_dim2_pad,
 |            right_dim2_pad), (left_dim3_pad, right_dim3_pad))`.
 |      data_format: A string, one of `"channels_last"` (default) or
 |          `"channels_first"`. The ordering of the dimensions in the inputs.
 |          `"channels_last"` corresponds to inputs with shape
 |          `(batch_size, spatial_dim1, spatial_dim2, spatial_dim3, channels)`
 |          while `"channels_first"` corresponds to inputs with shape
 |          `(batch_size, channels, spatial_dim1, spatial_dim2, spatial_dim3)`.
 |          When unspecified, uses `image_data_format` value found in your Keras
 |          config file at `~/.keras/keras.json` (if exists). Defaults to
 |          `"channels_last"`.
 |
 |  Input shape:
 |      5D tensor with shape:
 |      - If `data_format` is `"channels_last"`:
 |        `(batch_size, first_axis_to_pad, second_axis_to_pad,
 |        third_axis_to_pad, depth)`
 |      - If `data_format` is `"channels_first"`:
 |        `(batch_size, depth, first_axis_to_pad, second_axis_to_pad,
 |        third_axis_to_pad)`
 |
 |  Output shape:
 |      5D tensor with shape:
 |      - If `data_format` is `"channels_last"`:
 |        `(batch_size, first_padded_axis, second_padded_axis,
 |        third_axis_to_pad, depth)`
 |      - If `data_format` is `"channels_first"`:
 |        `(batch_size, depth, first_padded_axis, second_padded_axis,
 |        third_axis_to_pad)`
 |
 |  Method resolution order:
 |      ZeroPadding3D
 |      keras.src.layers.layer.Layer
 |      keras.src.backend.tensorflow.layer.TFLayer
 |      keras.src.backend.tensorflow.trackable.KerasAutoTrackable
 |      tensorflow.python.trackable.autotrackable.AutoTrackable
 |      tensorflow.python.trackable.base.Trackable
 |      keras.src.ops.operation.Operation
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  __init__(
 |    self,
 |    padding=((1, 1), (1, 1), (1, 1)),
 |    data_format=None,
 |    **kwargs
 |  )
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  call(self, inputs)
 |
 |  compute_output_shape(self, input_shape)
 |
 |  get_config(self)
 |      Returns the config of the object.
 |
 |      An object config is a Python dictionary (serializable)
 |      containing the information needed to re-instantiate it.
 |

