Help on class RandomFlip in module keras.src.layers.preprocessing.random_flip:

class RandomFlip(keras.src.layers.preprocessing.tf_data_layer.TFDataLayer)
 |  RandomFlip(mode='horizontal_and_vertical', seed=None, **kwargs)
 |
 |  A preprocessing layer which randomly flips images during training.
 |
 |  This layer will flip the images horizontally and or vertically based on the
 |  `mode` attribute. During inference time, the output will be identical to
 |  input. Call the layer with `training=True` to flip the input.
 |  Input pixel values can be of any range (e.g. `[0., 1.)` or `[0, 255]`) and
 |  of integer or floating point dtype.
 |  By default, the layer will output floats.
 |
 |  **Note:** This layer is safe to use inside a `tf.data` pipeline
 |  (independently of which backend you're using).
 |
 |  Input shape:
 |      3D (unbatched) or 4D (batched) tensor with shape:
 |      `(..., height, width, channels)`, in `"channels_last"` format.
 |
 |  Output shape:
 |      3D (unbatched) or 4D (batched) tensor with shape:
 |      `(..., height, width, channels)`, in `"channels_last"` format.
 |
 |  Args:
 |      mode: String indicating which flip mode to use. Can be `"horizontal"`,
 |          `"vertical"`, or `"horizontal_and_vertical"`. `"horizontal"` is a
 |          left-right flip and `"vertical"` is a top-bottom flip. Defaults to
 |          `"horizontal_and_vertical"`
 |      seed: Integer. Used to create a random seed.
 |      **kwargs: Base layer keyword arguments, such as
 |          `name` and `dtype`.
 |
 |  Method resolution order:
 |      RandomFlip
 |      keras.src.layers.preprocessing.tf_data_layer.TFDataLayer
 |      keras.src.layers.layer.Layer
 |      keras.src.backend.tensorflow.layer.TFLayer
 |      keras.src.backend.tensorflow.trackable.KerasAutoTrackable
 |      tensorflow.python.trackable.autotrackable.AutoTrackable
 |      tensorflow.python.trackable.base.Trackable
 |      keras.src.ops.operation.Operation
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  __init__(
 |    self,
 |    mode='horizontal_and_vertical',
 |    seed=None,
 |    **kwargs
 |  )
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  call(
 |    self,
 |    inputs,
 |    training=True
 |  )
 |
 |  compute_output_shape(self, input_shape)
 |
 |  get_config(self)
 |      Returns the config of the object.
 |
 |      An object config is a Python dictionary (serializable)
 |      containing the information needed to re-instantiate it.
 |

