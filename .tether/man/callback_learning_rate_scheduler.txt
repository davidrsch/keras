Help on class LearningRateScheduler in module keras.src.callbacks.learning_rate_scheduler:

class LearningRateScheduler(keras.src.callbacks.callback.Callback)
 |  LearningRateScheduler(schedule, verbose=0)
 |
 |  Learning rate scheduler.
 |
 |  At the beginning of every epoch, this callback gets the updated learning
 |  rate value from `schedule` function provided at `__init__`, with the current
 |  epoch and current learning rate, and applies the updated learning rate on
 |  the optimizer.
 |
 |  Args:
 |      schedule: A function that takes an epoch index (integer, indexed from 0)
 |          and current learning rate (float) as inputs and returns a new
 |          learning rate as output (float).
 |      verbose: Integer. 0: quiet, 1: log update messages.
 |
 |  Example:
 |
 |  >>> # This function keeps the initial learning rate for the first ten epochs
 |  >>> # and decreases it exponentially after that.
 |  >>> def scheduler(epoch, lr):
 |  ...     if epoch < 10:
 |  ...         return lr
 |  ...     else:
 |  ...         return lr * ops.exp(-0.1)
 |  >>>
 |  >>> model = keras.models.Sequential([keras.layers.Dense(10)])
 |  >>> model.compile(keras.optimizers.SGD(), loss='mse')
 |  >>> round(model.optimizer.learning_rate, 5)
 |  0.01
 |
 |  >>> callback = keras.callbacks.LearningRateScheduler(scheduler)
 |  >>> history = model.fit(np.arange(100).reshape(5, 20), np.zeros(5),
 |  ...                     epochs=15, callbacks=[callback], verbose=0)
 |  >>> round(model.optimizer.learning_rate, 5)
 |  0.00607
 |
 |  Method resolution order:
 |      LearningRateScheduler
 |      keras.src.callbacks.callback.Callback
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  __init__(
 |    self,
 |    schedule,
 |    verbose=0
 |  )
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  on_epoch_begin(
 |    self,
 |    epoch,
 |    logs=None
 |  )
 |      Called at the start of an epoch.
 |
 |      Subclasses should override for any actions to run. This function should
 |      only be called during TRAIN mode.
 |
 |      Args:
 |          epoch: Integer, index of epoch.
 |          logs: Dict. Currently no data is passed to this argument for this
 |            method but that may change in the future.
 |
 |  on_epoch_end(
 |    self,
 |    epoch,
 |    logs=None
 |  )
 |      Called at the end of an epoch.
 |
 |      Subclasses should override for any actions to run. This function should
 |      only be called during TRAIN mode.
 |
 |      Args:
 |          epoch: Integer, index of epoch.
 |          logs: Dict, metric results for this training epoch, and for the
 |            validation epoch if validation is performed. Validation result
 |            keys are prefixed with `val_`. For training epoch, the values of
 |            the `Model`'s metrics are returned. Example:
 |            `{'loss': 0.2, 'accuracy': 0.7}`.
 |
