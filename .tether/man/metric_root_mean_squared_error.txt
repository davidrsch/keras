Help on class RootMeanSquaredError in module keras.src.metrics.regression_metrics:

class RootMeanSquaredError(keras.src.metrics.reduction_metrics.Mean)
 |  RootMeanSquaredError(name='root_mean_squared_error', dtype=None)
 |
 |  Computes root mean squared error metric between `y_true` and `y_pred`.
 |
 |  Formula:
 |
 |  ```python
 |  loss = sqrt(mean((y_pred - y_true) ** 2))
 |  ```
 |
 |  Args:
 |      name: (Optional) string name of the metric instance.
 |      dtype: (Optional) data type of the metric result.
 |
 |  Example:
 |
 |  Example:
 |
 |  >>> m = keras.metrics.RootMeanSquaredError()
 |  >>> m.update_state([[0, 1], [0, 0]], [[1, 1], [0, 0]])
 |  >>> m.result()
 |  0.5
 |
 |  >>> m.reset_state()
 |  >>> m.update_state([[0, 1], [0, 0]], [[1, 1], [0, 0]],
 |  ...                sample_weight=[1, 0])
 |  >>> m.result()
 |  0.70710677
 |
 |  Usage with `compile()` API:
 |
 |  ```python
 |  model.compile(
 |      optimizer='sgd',
 |      loss='mse',
 |      metrics=[keras.metrics.RootMeanSquaredError()])
 |  ```
 |
 |  Method resolution order:
 |      RootMeanSquaredError
 |      keras.src.metrics.reduction_metrics.Mean
 |      keras.src.metrics.metric.Metric
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  __init__(
 |    self,
 |    name='root_mean_squared_error',
 |    dtype=None
 |  )
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  result(self)
 |      Compute the current metric value.
 |
 |      Returns:
 |          A scalar tensor, or a dictionary of scalar tensors.
 |
 |  update_state(
 |    self,
 |    y_true,
 |    y_pred,
 |    sample_weight=None
 |  )
 |      Accumulates root mean squared error statistics.
 |
 |      Args:
 |          y_true: The ground truth values.
 |          y_pred: The predicted values.
 |          sample_weight: Optional weighting of each example. Can
 |              be a `Tensor` whose rank is either 0, or the same rank as
 |              `y_true`, and must be broadcastable to `y_true`.
 |              Defaults to `1`.
 |
 |      Returns:
 |          Update op.
 |

