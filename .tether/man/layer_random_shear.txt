Help on class RandomShear in module keras.src.layers.preprocessing.image_preprocessing.random_shear:

class RandomShear(keras.src.layers.preprocessing.image_preprocessing.base_image_preprocessing_layer.BaseImagePreprocessingLayer)
 |  RandomShear(x_factor=0.0, y_factor=0.0, interpolation='bilinear', fill_mode='reflect', fill_value=0.0, data_format=None, seed=None, **kwargs)
 |
 |  A preprocessing layer that randomly applies shear transformations to
 |  images.
 |
 |  This layer shears the input images along the x-axis and/or y-axis by a
 |  randomly selected factor within the specified range. The shear
 |  transformation is applied to each image independently in a batch. Empty
 |  regions created during the transformation are filled according to the
 |  `fill_mode` and `fill_value` parameters.
 |
 |  Args:
 |      x_factor: A tuple of two floats. For each augmented image, a value
 |          is sampled from the provided range. If a float is passed, the
 |          range is interpreted as `(0, x_factor)`. Values represent a
 |          percentage of the image to shear over. For example, 0.3 shears
 |          pixels up to 30% of the way across the image. All provided values
 |          should be positive.
 |      y_factor: A tuple of two floats. For each augmented image, a value
 |          is sampled from the provided range. If a float is passed, the
 |          range is interpreted as `(0, y_factor)`. Values represent a
 |          percentage of the image to shear over. For example, 0.3 shears
 |          pixels up to 30% of the way across the image. All provided values
 |          should be positive.
 |      interpolation: Interpolation mode. Supported values: `"nearest"`,
 |          `"bilinear"`.
 |      fill_mode: Points outside the boundaries of the input are filled
 |          according to the given mode. Available methods are `"constant"`,
 |          `"nearest"`, `"wrap"` and `"reflect"`. Defaults to `"constant"`.
 |          - `"reflect"`: `(d c b a | a b c d | d c b a)`
 |              The input is extended by reflecting about the edge of the
 |              last pixel.
 |          - `"constant"`: `(k k k k | a b c d | k k k k)`
 |              The input is extended by filling all values beyond the edge
 |              with the same constant value `k` specified by `fill_value`.
 |          - `"wrap"`: `(a b c d | a b c d | a b c d)`
 |              The input is extended by wrapping around to the opposite edge.
 |          - `"nearest"`: `(a a a a | a b c d | d d d d)`
 |              The input is extended by the nearest pixel.
 |          Note that when using torch backend, `"reflect"` is redirected to
 |          `"mirror"` `(c d c b | a b c d | c b a b)` because torch does
 |          not support `"reflect"`.
 |          Note that torch backend does not support `"wrap"`.
 |      fill_value: A float representing the value to be filled outside the
 |          boundaries when `fill_mode="constant"`.
 |      seed: Integer. Used to create a random seed.
 |
 |  Method resolution order:
 |      RandomShear
 |      keras.src.layers.preprocessing.image_preprocessing.base_image_preprocessing_layer.BaseImagePreprocessingLayer
 |      keras.src.layers.preprocessing.tf_data_layer.TFDataLayer
 |      keras.src.layers.layer.Layer
 |      keras.src.backend.tensorflow.layer.TFLayer
 |      keras.src.backend.tensorflow.trackable.KerasAutoTrackable
 |      tensorflow.python.trackable.autotrackable.AutoTrackable
 |      tensorflow.python.trackable.base.Trackable
 |      keras.src.ops.operation.Operation
 |      keras.src.saving.keras_saveable.KerasSaveable
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  __init__(
 |    self,
 |    x_factor=0.0,
 |    y_factor=0.0,
 |    interpolation='bilinear',
 |    fill_mode='reflect',
 |    fill_value=0.0,
 |    data_format=None,
 |    seed=None,
 |    **kwargs
 |  )
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  compute_output_shape(self, input_shape)
 |
 |  get_config(self)
 |      Returns the config of the object.
 |
 |      An object config is a Python dictionary (serializable)
 |      containing the information needed to re-instantiate it.
 |
 |  get_random_transformation(
 |    self,
 |    data,
 |    training=True,
 |    seed=None
 |  )
 |
 |  get_shifted_bbox(
 |    self,
 |    bounding_boxes,
 |    w_shift_factor,
 |    h_shift_factor
 |  )
 |
 |  get_transformed_x_y(
 |    self,
 |    x,
 |    y,
 |    transform
 |  )
 |
 |  transform_bounding_boxes(
 |    self,
 |    bounding_boxes,
 |    transformation,
 |    training=True
 |  )
 |
 |  transform_images(
 |    self,
 |    images,
 |    transformation,
 |    training=True
 |  )
 |
 |  transform_labels(
 |    self,
 |    labels,
 |    transformation,
 |    training=True
 |  )
 |
 |  transform_segmentation_masks(
 |    self,
 |    segmentation_masks,
 |    transformation,
 |    training=True
 |  )
 |

