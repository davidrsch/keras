Help on class RandomContrast in module keras.src.layers.preprocessing.random_contrast:

class RandomContrast(keras.src.layers.preprocessing.tf_data_layer.TFDataLayer)
 |  RandomContrast(factor, seed=None, **kwargs)
 |
 |  A preprocessing layer which randomly adjusts contrast during training.
 |
 |  This layer will randomly adjust the contrast of an image or images
 |  by a random factor. Contrast is adjusted independently
 |  for each channel of each image during training.
 |
 |  For each channel, this layer computes the mean of the image pixels in the
 |  channel and then adjusts each component `x` of each pixel to
 |  `(x - mean) * contrast_factor + mean`.
 |
 |  Input pixel values can be of any range (e.g. `[0., 1.)` or `[0, 255]`) and
 |  in integer or floating point dtype.
 |  By default, the layer will output floats.
 |
 |  **Note:** This layer is safe to use inside a `tf.data` pipeline
 |  (independently of which backend you're using).
 |
 |  Input shape:
 |      3D (unbatched) or 4D (batched) tensor with shape:
 |      `(..., height, width, channels)`, in `"channels_last"` format.
 |
 |  Output shape:
 |      3D (unbatched) or 4D (batched) tensor with shape:
 |      `(..., height, width, channels)`, in `"channels_last"` format.
 |
 |  Args:
 |      factor: a positive float represented as fraction of value, or a tuple of
 |          size 2 representing lower and upper bound.
 |          When represented as a single float, lower = upper.
 |          The contrast factor will be randomly picked between
 |          `[1.0 - lower, 1.0 + upper]`. For any pixel x in the channel,
 |          the output will be `(x - mean) * factor + mean`
 |          where `mean` is the mean value of the channel.
 |      seed: Integer. Used to create a random seed.
 |
 |  Method resolution order:
 |      RandomContrast
 |      keras.src.layers.preprocessing.tf_data_layer.TFDataLayer
 |      keras.src.layers.layer.Layer
 |      keras.src.backend.tensorflow.layer.TFLayer
 |      keras.src.backend.tensorflow.trackable.KerasAutoTrackable
 |      tensorflow.python.trackable.autotrackable.AutoTrackable
 |      tensorflow.python.trackable.base.Trackable
 |      keras.src.ops.operation.Operation
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  __init__(
 |    self,
 |    factor,
 |    seed=None,
 |    **kwargs
 |  )
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  call(
 |    self,
 |    inputs,
 |    training=True
 |  )
 |
 |  compute_output_shape(self, input_shape)
 |
 |  get_config(self)
 |      Returns the config of the object.
 |
 |      An object config is a Python dictionary (serializable)
 |      containing the information needed to re-instantiate it.
 |

