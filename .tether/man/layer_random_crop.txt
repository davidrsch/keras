Help on class RandomCrop in module keras.src.layers.preprocessing.random_crop:

class RandomCrop(keras.src.layers.preprocessing.tf_data_layer.TFDataLayer)
 |  RandomCrop(height, width, seed=None, data_format=None, name=None, **kwargs)
 |
 |  A preprocessing layer which randomly crops images during training.
 |
 |  During training, this layer will randomly choose a location to crop images
 |  down to a target size. The layer will crop all the images in the same batch
 |  to the same cropping location.
 |
 |  At inference time, and during training if an input image is smaller than the
 |  target size, the input will be resized and cropped so as to return the
 |  largest possible window in the image that matches the target aspect ratio.
 |  If you need to apply random cropping at inference time, set `training` to
 |  True when calling the layer.
 |
 |  Input pixel values can be of any range (e.g. `[0., 1.)` or `[0, 255]`) and
 |  of integer or floating point dtype. By default, the layer will output
 |  floats.
 |
 |  **Note:** This layer is safe to use inside a `tf.data` pipeline
 |  (independently of which backend you're using).
 |
 |  Input shape:
 |      3D (unbatched) or 4D (batched) tensor with shape:
 |      `(..., height, width, channels)`, in `"channels_last"` format.
 |
 |  Output shape:
 |      3D (unbatched) or 4D (batched) tensor with shape:
 |      `(..., target_height, target_width, channels)`.
 |
 |  Args:
 |      height: Integer, the height of the output shape.
 |      width: Integer, the width of the output shape.
 |      seed: Integer. Used to create a random seed.
 |      **kwargs: Base layer keyword arguments, such as
 |          `name` and `dtype`.
 |
 |  Method resolution order:
 |      RandomCrop
 |      keras.src.layers.preprocessing.tf_data_layer.TFDataLayer
 |      keras.src.layers.layer.Layer
 |      keras.src.backend.tensorflow.layer.TFLayer
 |      keras.src.backend.tensorflow.trackable.KerasAutoTrackable
 |      tensorflow.python.trackable.autotrackable.AutoTrackable
 |      tensorflow.python.trackable.base.Trackable
 |      keras.src.ops.operation.Operation
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  __init__(
 |    self,
 |    height,
 |    width,
 |    seed=None,
 |    data_format=None,
 |    name=None,
 |    **kwargs
 |  )
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  call(
 |    self,
 |    inputs,
 |    training=True
 |  )
 |
 |  compute_output_shape(
 |    self,
 |    input_shape,
 |    *args,
 |    **kwargs
 |  )
 |
 |  get_config(self)
 |      Returns the config of the object.
 |
 |      An object config is a Python dictionary (serializable)
 |      containing the information needed to re-instantiate it.
 |

