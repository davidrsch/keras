Help on class AugMix in module keras.src.layers.preprocessing.image_preprocessing.aug_mix:

class AugMix(keras.src.layers.preprocessing.image_preprocessing.base_image_preprocessing_layer.BaseImagePreprocessingLayer)
 |  AugMix(value_range=(0, 255), num_chains=3, chain_depth=3, factor=0.3, alpha=1.0, all_ops=True, interpolation='bilinear', seed=None, data_format=None, **kwargs)
 |
 |  Performs the AugMix data augmentation technique.
 |
 |  AugMix aims to produce images with variety while preserving the image
 |  semantics and local statistics. During the augmentation process,
 |  the same augmentation is applied across all images in the batch
 |  in num_chains different ways, with each chain consisting of
 |  chain_depth augmentations.
 |
 |  Args:
 |      value_range: the range of values the incoming images will have.
 |          Represented as a two number tuple written (low, high).
 |          This is typically either `(0, 1)` or `(0, 255)` depending
 |          on how your preprocessing pipeline is set up.
 |      num_chains: an integer representing the number of different chains to
 |          be mixed, defaults to 3.
 |      chain_depth: an integer representing the maximum number of
 |          transformations to be applied in each chain. The actual number
 |          of transformations in each chain will be sampled randomly
 |          from the range `[0, `chain_depth`]`. Defaults to 3.
 |      factor: The strength of the augmentation as a normalized value
 |          between 0 and 1. Default is 0.3.
 |      alpha: a float value used as the probability coefficients for the
 |          Beta and Dirichlet distributions, defaults to 1.0.
 |      all_ops: Use all operations (including random_brightness,
 |          random_color_degeneration, random_contrast and random_sharpness).
 |          Default is True.
 |      interpolation: The interpolation method to use for resizing operations.
 |          Options include `"nearest"`, `"bilinear"`. Default is `"bilinear"`.
 |      seed: Integer. Used to create a random seed.
 |
 |  References:
 |      - [AugMix paper](https://arxiv.org/pdf/1912.02781)
 |      - [Official Code](https://github.com/google-research/augmix)
 |
 |  Method resolution order:
 |      AugMix
 |      keras.src.layers.preprocessing.image_preprocessing.base_image_preprocessing_layer.BaseImagePreprocessingLayer
 |      keras.src.layers.preprocessing.tf_data_layer.TFDataLayer
 |      keras.src.layers.layer.Layer
 |      keras.src.backend.tensorflow.layer.TFLayer
 |      keras.src.backend.tensorflow.trackable.KerasAutoTrackable
 |      tensorflow.python.trackable.autotrackable.AutoTrackable
 |      tensorflow.python.trackable.base.Trackable
 |      keras.src.ops.operation.Operation
 |      keras.src.saving.keras_saveable.KerasSaveable
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  __init__(
 |    self,
 |    value_range=(0, 255),
 |    num_chains=3,
 |    chain_depth=3,
 |    factor=0.3,
 |    alpha=1.0,
 |    all_ops=True,
 |    interpolation='bilinear',
 |    seed=None,
 |    data_format=None,
 |    **kwargs
 |  )
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  build(self, input_shape)
 |
 |  compute_output_shape(self, input_shape)
 |
 |  get_config(self)
 |      Returns the config of the object.
 |
 |      An object config is a Python dictionary (serializable)
 |      containing the information needed to re-instantiate it.
 |
 |  get_random_transformation(
 |    self,
 |    data,
 |    training=True,
 |    seed=None
 |  )
 |
 |  transform_bounding_boxes(
 |    self,
 |    bounding_boxes,
 |    transformation,
 |    training=True
 |  )
 |
 |  transform_images(
 |    self,
 |    images,
 |    transformation,
 |    training=True
 |  )
 |
 |  transform_labels(
 |    self,
 |    labels,
 |    transformation,
 |    training=True
 |  )
 |
 |  transform_segmentation_masks(
 |    self,
 |    segmentation_masks,
 |    transformation,
 |    training=True
 |  )
 |

