__signature__
keras.random.binomial(
  shape,
  counts,
  probabilities,
  dtype=None,
  seed=None
)
__doc__
Draw samples from a Binomial distribution.

The values are drawn from a Binomial distribution with
specified trial count and probability of success.

Args:
    shape: The shape of the random values to generate.
    counts: A number or array of numbers representing the
        number of trials. It must be broadcastable with `probabilities`.
    probabilities: A float or array of floats representing the
        probability of success of an individual event.
        It must be broadcastable with `counts`.
    dtype: Optional dtype of the tensor. Only floating point types are
        supported. If not specified, `keras.config.floatx()` is used,
        which defaults to `float32` unless you configured it otherwise (via
        `keras.config.set_floatx(float_dtype)`).
    seed: Optional Python integer or instance of
       `keras.random.SeedGenerator`.
        By default, the `seed` argument is `None`, and an internal global
        `keras.random.SeedGenerator` is used. The `seed` argument can be
        used to ensure deterministic (repeatable) random number generation.
        Note that passing an integer as the `seed` value will produce the
        same random values for each call. To generate different random
        values for repeated calls, an instance of
        `keras.random.SeedGenerator` must be provided as the `seed` value.
        Remark concerning the JAX backend: When tracing functions with the
        JAX backend the global `keras.random.SeedGenerator` is not
        supported. Therefore, during tracing the default value seed=None
        will produce an error, and a `seed` argument must be provided.

