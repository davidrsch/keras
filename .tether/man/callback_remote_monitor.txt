Help on class RemoteMonitor in module keras.src.callbacks.remote_monitor:

class RemoteMonitor(keras.src.callbacks.callback.Callback)
 |  RemoteMonitor(root='http://localhost:9000', path='/publish/epoch/end/', field='data', headers=None, send_as_json=False)
 |
 |  Callback used to stream events to a server.
 |
 |  Requires the `requests` library.
 |  Events are sent to `root + '/publish/epoch/end/'` by default. Calls are
 |  HTTP POST, with a `data` argument which is a
 |  JSON-encoded dictionary of event data.
 |  If `send_as_json=True`, the content type of the request will be
 |  `"application/json"`.
 |  Otherwise the serialized JSON will be sent within a form.
 |
 |  Args:
 |      root: String; root url of the target server.
 |      path: String; path relative to `root` to which the events will be sent.
 |      field: String; JSON field under which the data will be stored.
 |          The field is used only if the payload is sent within a form
 |          (i.e. when `send_as_json=False`).
 |      headers: Dictionary; optional custom HTTP headers.
 |      send_as_json: Boolean; whether the request should be
 |          sent as `"application/json"`.
 |
 |  Method resolution order:
 |      RemoteMonitor
 |      keras.src.callbacks.callback.Callback
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  __init__(
 |    self,
 |    root='http://localhost:9000',
 |    path='/publish/epoch/end/',
 |    field='data',
 |    headers=None,
 |    send_as_json=False
 |  )
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  on_epoch_end(
 |    self,
 |    epoch,
 |    logs=None
 |  )
 |      Called at the end of an epoch.
 |
 |      Subclasses should override for any actions to run. This function should
 |      only be called during TRAIN mode.
 |
 |      Args:
 |          epoch: Integer, index of epoch.
 |          logs: Dict, metric results for this training epoch, and for the
 |            validation epoch if validation is performed. Validation result
 |            keys are prefixed with `val_`. For training epoch, the values of
 |            the `Model`'s metrics are returned. Example:
 |            `{'loss': 0.2, 'accuracy': 0.7}`.
 |

