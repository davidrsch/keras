Help on class Tversky in module keras.src.losses.losses:

class Tversky(LossFunctionWrapper)
 |  Tversky(alpha=0.5, beta=0.5, reduction='sum_over_batch_size', name='tversky', dtype=None)
 |
 |  Computes the Tversky loss value between `y_true` and `y_pred`.
 |
 |  This loss function is weighted by the alpha and beta coefficients
 |  that penalize false positives and false negatives.
 |
 |  With `alpha=0.5` and `beta=0.5`, the loss value becomes equivalent to
 |  Dice Loss.
 |
 |  Args:
 |      alpha: The coefficient controlling incidence of false positives.
 |          Defaults to `0.5`.
 |      beta: The coefficient controlling incidence of false negatives.
 |          Defaults to `0.5`.
 |      reduction: Type of reduction to apply to the loss. In almost all cases
 |          this should be `"sum_over_batch_size"`.
 |          Supported options are `"sum"`, `"sum_over_batch_size"` or `None`.
 |      name: Optional name for the loss instance.
 |      dtype: The dtype of the loss's computations. Defaults to `None`, which
 |          means using `keras.backend.floatx()`. `keras.backend.floatx()` is a
 |          `"float32"` unless set to different value
 |          (via `keras.backend.set_floatx()`). If a `keras.DTypePolicy` is
 |          provided, then the `compute_dtype` will be utilized.
 |
 |  Returns:
 |      Tversky loss value.
 |
 |  Reference:
 |
 |  - [Salehi et al., 2017](https://arxiv.org/abs/1706.05721)
 |
 |  Method resolution order:
 |      Tversky
 |      LossFunctionWrapper
 |      keras.src.losses.loss.Loss
 |      keras.src.saving.keras_saveable.KerasSaveable
 |      builtins.object
 |
 |  Methods defined here:
 |
 |  __init__(
 |    self,
 |    alpha=0.5,
 |    beta=0.5,
 |    reduction='sum_over_batch_size',
 |    name='tversky',
 |    dtype=None
 |  )
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  get_config(self)
 |

